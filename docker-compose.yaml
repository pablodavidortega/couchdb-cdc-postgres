version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka1:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://kafka1:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3

  kafka2:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://kafka2:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3

  kafka3:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://kafka3:9094
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:9094
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb
    volumes:
      - ./postgres/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    ports:
      - "5432:5432"

  couchdb:
    image: couchdb:latest
    environment:
      COUCHDB_USER: admin
      COUCHDB_PASSWORD: password
    ports:
      - "5984:5984"
    volumes:
      - ./couchdb/data:/opt/couchdb/data

  couchdb_setup:
    image: alpine/curl
    volumes:
      - ./couchdb/docker_configure_couchdb.sh:/docker_configure_couchdb.sh
    command: ["sh", "docker_configure_couchdb.sh"]
    depends_on:
      - couchdb

  document_writer:
    build: ./document_writer
    depends_on:
      - couchdb
    environment:
      COUCHDB_URL : "http://couchdb:5984"
      COUCHDB_USER : "admin"
      COUCHDB_PASSWORD : "password"
      DB_NAME : "mydb"
      LOG_LEVEL: "WARNING"
    volumes:
      - ./document_writer/document_writer.py:/app/document_writer.py
    command: ["conda", "run", "--no-capture-output", "-n", "env_name", "python", "document_writer.py"]

  producer:
    build: ./producer
    depends_on:
      - kafka1
      - kafka2
      - kafka3
      - postgres
    environment:
      COUCHDB_URL: "http://couchdb:5984"
      DB_NAME : "mydb"
      KAFKA_TOPIC: "my-topic"
      POSTGRES_URL: "postgresql://user:password@postgres:5432/mydb"
    volumes:
      - ./producer/producer.py:/app/producer.py
    command: ["conda", "run", "--no-capture-output", "-n", "env_name", "python", "producer.py"]
#
#  consumer:
#    build: ./consumer
#    depends_on:
#      - kafka1
#      - kafka2
#      - kafka3
#      - postgres
#    environment:
#      KAFKA_TOPIC: "my-topic"
#      POSTGRES_URL: "postgresql://user:password@postgres:5432/mydb"
